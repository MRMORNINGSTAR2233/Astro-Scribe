services:
  # PostgreSQL with pgvector extension
  postgres:
    image: pgvector/pgvector:pg15
    container_name: nasa_postgres
    environment:
      POSTGRES_DB: nasa_knowledge
      POSTGRES_USER: nasa_user
      POSTGRES_PASSWORD: nasa_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - nasa_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nasa_user -d nasa_knowledge"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.15
    container_name: nasa_neo4j
    environment:
      NEO4J_AUTH: neo4j/neo4j_password
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*,gds.*"
      NEO4J_dbms_security_procedures_allowlist: "apoc.*,gds.*"
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_conf:/conf
    networks:
      - nasa_network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "neo4j_password", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Streamlit Application
  streamlit_app:
    build: .
    container_name: nasa_streamlit
    ports:
      - "8501:8501"
    volumes:
      - ./uploads:/app/uploads
      - /Users/akshaykumar/Documents/bio-nexus/nasa-pdf:/app/nasa-pdf
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=nasa_knowledge
      - POSTGRES_USER=nasa_user
      - POSTGRES_PASSWORD=nasa_password
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=neo4j_password
      - GROQ_API_KEY=${GROQ_API_KEY:-}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
      - DEFAULT_MODEL=llama-3.3-70b-versatile
      - LLM_PROVIDER=groq
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    networks:
      - nasa_network

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
  neo4j_conf:

networks:
  nasa_network:
    driver: bridge